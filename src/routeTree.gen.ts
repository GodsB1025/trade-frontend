/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as StatisticsIndexRouteImport } from './routes/statistics/index'
import { Route as SearchIndexRouteImport } from './routes/search/index'
import { Route as NewsIndexRouteImport } from './routes/news/index'
import { Route as FaqIndexRouteImport } from './routes/faq/index'
import { Route as ExchangeRatesIndexRouteImport } from './routes/exchange-rates/index'
import { Route as DashboardIndexRouteImport } from './routes/dashboard/index'
import { Route as FeedFeedIdRouteImport } from './routes/feed/$feedId'
import { Route as ChatSession_uuidRouteImport } from './routes/chat/$session_uuid'
import { Route as AuthSignupRouteImport } from './routes/auth/signup'
import { Route as AuthLoginRouteImport } from './routes/auth/login'
import { Route as AuthFindPasswordRouteImport } from './routes/auth/find-password'
import { Route as AuthCallbackRouteImport } from './routes/auth/callback'
import { Route as DashboardSettingsIndexRouteImport } from './routes/dashboard/settings/index'
import { Route as DashboardProfileIndexRouteImport } from './routes/dashboard/profile/index'
import { Route as DashboardHistoryIndexRouteImport } from './routes/dashboard/history/index'
import { Route as DashboardBookmarksIndexRouteImport } from './routes/dashboard/bookmarks/index'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const StatisticsIndexRoute = StatisticsIndexRouteImport.update({
  id: '/statistics/',
  path: '/statistics/',
  getParentRoute: () => rootRouteImport,
} as any)
const SearchIndexRoute = SearchIndexRouteImport.update({
  id: '/search/',
  path: '/search/',
  getParentRoute: () => rootRouteImport,
} as any)
const NewsIndexRoute = NewsIndexRouteImport.update({
  id: '/news/',
  path: '/news/',
  getParentRoute: () => rootRouteImport,
} as any)
const FaqIndexRoute = FaqIndexRouteImport.update({
  id: '/faq/',
  path: '/faq/',
  getParentRoute: () => rootRouteImport,
} as any)
const ExchangeRatesIndexRoute = ExchangeRatesIndexRouteImport.update({
  id: '/exchange-rates/',
  path: '/exchange-rates/',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardIndexRoute = DashboardIndexRouteImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => rootRouteImport,
} as any)
const FeedFeedIdRoute = FeedFeedIdRouteImport.update({
  id: '/feed/$feedId',
  path: '/feed/$feedId',
  getParentRoute: () => rootRouteImport,
} as any)
const ChatSession_uuidRoute = ChatSession_uuidRouteImport.update({
  id: '/chat/$session_uuid',
  path: '/chat/$session_uuid',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSignupRoute = AuthSignupRouteImport.update({
  id: '/auth/signup',
  path: '/auth/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthFindPasswordRoute = AuthFindPasswordRouteImport.update({
  id: '/auth/find-password',
  path: '/auth/find-password',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthCallbackRoute = AuthCallbackRouteImport.update({
  id: '/auth/callback',
  path: '/auth/callback',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardSettingsIndexRoute = DashboardSettingsIndexRouteImport.update({
  id: '/dashboard/settings/',
  path: '/dashboard/settings/',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardProfileIndexRoute = DashboardProfileIndexRouteImport.update({
  id: '/dashboard/profile/',
  path: '/dashboard/profile/',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardHistoryIndexRoute = DashboardHistoryIndexRouteImport.update({
  id: '/dashboard/history/',
  path: '/dashboard/history/',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardBookmarksIndexRoute = DashboardBookmarksIndexRouteImport.update({
  id: '/dashboard/bookmarks/',
  path: '/dashboard/bookmarks/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth/callback': typeof AuthCallbackRoute
  '/auth/find-password': typeof AuthFindPasswordRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/signup': typeof AuthSignupRoute
  '/chat/$session_uuid': typeof ChatSession_uuidRoute
  '/feed/$feedId': typeof FeedFeedIdRoute
  '/dashboard': typeof DashboardIndexRoute
  '/exchange-rates': typeof ExchangeRatesIndexRoute
  '/faq': typeof FaqIndexRoute
  '/news': typeof NewsIndexRoute
  '/search': typeof SearchIndexRoute
  '/statistics': typeof StatisticsIndexRoute
  '/dashboard/bookmarks': typeof DashboardBookmarksIndexRoute
  '/dashboard/history': typeof DashboardHistoryIndexRoute
  '/dashboard/profile': typeof DashboardProfileIndexRoute
  '/dashboard/settings': typeof DashboardSettingsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth/callback': typeof AuthCallbackRoute
  '/auth/find-password': typeof AuthFindPasswordRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/signup': typeof AuthSignupRoute
  '/chat/$session_uuid': typeof ChatSession_uuidRoute
  '/feed/$feedId': typeof FeedFeedIdRoute
  '/dashboard': typeof DashboardIndexRoute
  '/exchange-rates': typeof ExchangeRatesIndexRoute
  '/faq': typeof FaqIndexRoute
  '/news': typeof NewsIndexRoute
  '/search': typeof SearchIndexRoute
  '/statistics': typeof StatisticsIndexRoute
  '/dashboard/bookmarks': typeof DashboardBookmarksIndexRoute
  '/dashboard/history': typeof DashboardHistoryIndexRoute
  '/dashboard/profile': typeof DashboardProfileIndexRoute
  '/dashboard/settings': typeof DashboardSettingsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/auth/callback': typeof AuthCallbackRoute
  '/auth/find-password': typeof AuthFindPasswordRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/signup': typeof AuthSignupRoute
  '/chat/$session_uuid': typeof ChatSession_uuidRoute
  '/feed/$feedId': typeof FeedFeedIdRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/exchange-rates/': typeof ExchangeRatesIndexRoute
  '/faq/': typeof FaqIndexRoute
  '/news/': typeof NewsIndexRoute
  '/search/': typeof SearchIndexRoute
  '/statistics/': typeof StatisticsIndexRoute
  '/dashboard/bookmarks/': typeof DashboardBookmarksIndexRoute
  '/dashboard/history/': typeof DashboardHistoryIndexRoute
  '/dashboard/profile/': typeof DashboardProfileIndexRoute
  '/dashboard/settings/': typeof DashboardSettingsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth/callback'
    | '/auth/find-password'
    | '/auth/login'
    | '/auth/signup'
    | '/chat/$session_uuid'
    | '/feed/$feedId'
    | '/dashboard'
    | '/exchange-rates'
    | '/faq'
    | '/news'
    | '/search'
    | '/statistics'
    | '/dashboard/bookmarks'
    | '/dashboard/history'
    | '/dashboard/profile'
    | '/dashboard/settings'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth/callback'
    | '/auth/find-password'
    | '/auth/login'
    | '/auth/signup'
    | '/chat/$session_uuid'
    | '/feed/$feedId'
    | '/dashboard'
    | '/exchange-rates'
    | '/faq'
    | '/news'
    | '/search'
    | '/statistics'
    | '/dashboard/bookmarks'
    | '/dashboard/history'
    | '/dashboard/profile'
    | '/dashboard/settings'
  id:
    | '__root__'
    | '/'
    | '/auth/callback'
    | '/auth/find-password'
    | '/auth/login'
    | '/auth/signup'
    | '/chat/$session_uuid'
    | '/feed/$feedId'
    | '/dashboard/'
    | '/exchange-rates/'
    | '/faq/'
    | '/news/'
    | '/search/'
    | '/statistics/'
    | '/dashboard/bookmarks/'
    | '/dashboard/history/'
    | '/dashboard/profile/'
    | '/dashboard/settings/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthCallbackRoute: typeof AuthCallbackRoute
  AuthFindPasswordRoute: typeof AuthFindPasswordRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthSignupRoute: typeof AuthSignupRoute
  ChatSession_uuidRoute: typeof ChatSession_uuidRoute
  FeedFeedIdRoute: typeof FeedFeedIdRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
  ExchangeRatesIndexRoute: typeof ExchangeRatesIndexRoute
  FaqIndexRoute: typeof FaqIndexRoute
  NewsIndexRoute: typeof NewsIndexRoute
  SearchIndexRoute: typeof SearchIndexRoute
  StatisticsIndexRoute: typeof StatisticsIndexRoute
  DashboardBookmarksIndexRoute: typeof DashboardBookmarksIndexRoute
  DashboardHistoryIndexRoute: typeof DashboardHistoryIndexRoute
  DashboardProfileIndexRoute: typeof DashboardProfileIndexRoute
  DashboardSettingsIndexRoute: typeof DashboardSettingsIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/statistics/': {
      id: '/statistics/'
      path: '/statistics'
      fullPath: '/statistics'
      preLoaderRoute: typeof StatisticsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/search/': {
      id: '/search/'
      path: '/search'
      fullPath: '/search'
      preLoaderRoute: typeof SearchIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/news/': {
      id: '/news/'
      path: '/news'
      fullPath: '/news'
      preLoaderRoute: typeof NewsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/faq/': {
      id: '/faq/'
      path: '/faq'
      fullPath: '/faq'
      preLoaderRoute: typeof FaqIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/exchange-rates/': {
      id: '/exchange-rates/'
      path: '/exchange-rates'
      fullPath: '/exchange-rates'
      preLoaderRoute: typeof ExchangeRatesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/feed/$feedId': {
      id: '/feed/$feedId'
      path: '/feed/$feedId'
      fullPath: '/feed/$feedId'
      preLoaderRoute: typeof FeedFeedIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/chat/$session_uuid': {
      id: '/chat/$session_uuid'
      path: '/chat/$session_uuid'
      fullPath: '/chat/$session_uuid'
      preLoaderRoute: typeof ChatSession_uuidRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/signup': {
      id: '/auth/signup'
      path: '/auth/signup'
      fullPath: '/auth/signup'
      preLoaderRoute: typeof AuthSignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/find-password': {
      id: '/auth/find-password'
      path: '/auth/find-password'
      fullPath: '/auth/find-password'
      preLoaderRoute: typeof AuthFindPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/callback': {
      id: '/auth/callback'
      path: '/auth/callback'
      fullPath: '/auth/callback'
      preLoaderRoute: typeof AuthCallbackRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/settings/': {
      id: '/dashboard/settings/'
      path: '/dashboard/settings'
      fullPath: '/dashboard/settings'
      preLoaderRoute: typeof DashboardSettingsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/profile/': {
      id: '/dashboard/profile/'
      path: '/dashboard/profile'
      fullPath: '/dashboard/profile'
      preLoaderRoute: typeof DashboardProfileIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/history/': {
      id: '/dashboard/history/'
      path: '/dashboard/history'
      fullPath: '/dashboard/history'
      preLoaderRoute: typeof DashboardHistoryIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/bookmarks/': {
      id: '/dashboard/bookmarks/'
      path: '/dashboard/bookmarks'
      fullPath: '/dashboard/bookmarks'
      preLoaderRoute: typeof DashboardBookmarksIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthCallbackRoute: AuthCallbackRoute,
  AuthFindPasswordRoute: AuthFindPasswordRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthSignupRoute: AuthSignupRoute,
  ChatSession_uuidRoute: ChatSession_uuidRoute,
  FeedFeedIdRoute: FeedFeedIdRoute,
  DashboardIndexRoute: DashboardIndexRoute,
  ExchangeRatesIndexRoute: ExchangeRatesIndexRoute,
  FaqIndexRoute: FaqIndexRoute,
  NewsIndexRoute: NewsIndexRoute,
  SearchIndexRoute: SearchIndexRoute,
  StatisticsIndexRoute: StatisticsIndexRoute,
  DashboardBookmarksIndexRoute: DashboardBookmarksIndexRoute,
  DashboardHistoryIndexRoute: DashboardHistoryIndexRoute,
  DashboardProfileIndexRoute: DashboardProfileIndexRoute,
  DashboardSettingsIndexRoute: DashboardSettingsIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
